import { Button, Divider, Drawer } from 'antd';
import React, { useState } from 'react';
import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';
import { faBell, faBook, faBookOpen, faLayerGroup, faPowerOff, faUserCircle } from '@fortawesome/free-solid-svg-icons';
import Title from 'antd/es/typography/Title';
import Search from 'antd/es/input/Search';
import Text from 'antd/es/typography/Text'
import '../Assets/Custome.css';
import { Link, useNavigate } from 'react-router-dom';

const SideBar = () => {

    const [open, setOpen] = useState(false);
    const [input, setInput] = useState("");
    const [text, setText] = useState([]);
    const [loading, setLoading] = useState(false);
    const navigate = useNavigate();

    const showDrawer = () => {
        setOpen(true);
    };
    const onClose = () => {
        setOpen(false);
    };

    const handleClick= async()=>{
        if (input.trim() === ' '){
            setText([]);
            return
        }
        setLoading(true);
        try{
            const response = await fetch("http://localhost:5000/search",{
                method:'POST',
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({text: input})
            });
            const data = await response.json();
            setText(data);
            console.log(data)
        } catch(error){
            console.log(error);
        } finally{
            setLoading(false);
        }
    }

    const handleLogout = async() =>{
        try{
            const response = await fetch("http://localhost:5000/logout",{
                method: 'GET',
                credentials :'include'
            });
            const data = await response.json();
            console.log(data);
            navigate('/login');
            localStorage.clear();
            sessionStorage.clear();
            localStorage.setItem('isLoggedOut', 'true');
            console.log("isLoggedOut", localStorage.getItem("isLoggedOut"));
        } catch(error){
            console.log(error);
        }
    }
    return (
        <>
            <div style={{display: 'flex', gap: '200px',
                padding: '50px',
                }} className='sidebar'>
                <Button onClick={showDrawer}>
                    <FontAwesomeIcon icon={faBook} style={{fontSize: '12pt'}}/>
                </Button>
                <Search placeholder='Search here....'
                className='input'
                value={input}
                onChange={(e)=>{setInput(e.target.value)}}
                onSearch={handleClick}
                />
            </div>
            <div>
                
                <div className='serach'>
                    {loading? (<p style={{
                        color: 'white',
                        marginLeft: '300px'
                    }}>Searching...</p>):(
                        input.trim() !== ' ' && text.length > 0 && (
                        text.map((book)=>(
                            <div key={book._id} style={{marginLeft: '300px'}} >
                                <Text style={{color: 'white', fontSize: '13pt'}}>Title: {book.title}</Text><br/>
                                <Text style={{color: 'white', fontSize: '13pt'}}>Category: {book.category}</Text>
                            </div>
                    ))
                    ))}
                </div>
                <Drawer
                title="Dashboard"
                open={open}
                onClose={onClose}
                placement='left'
                style={{
                    width: '250px',
                    backgroundColor: '#1B3C53',
                    color: 'white',
                }}
                >
                    <div className='menu'>
                        <Title level={5}><FontAwesomeIcon icon={faLayerGroup}/> <Link to={'/category'}>Category</Link></Title>
                        <Title level={5}><FontAwesomeIcon icon={faBookOpen}/><Link to={'/my-borrow-book'}> My Borrow Book</Link> </Title>
                        <Title level={5}><FontAwesomeIcon icon={faBell}/> Notification</Title>
                        <Title level={5}><FontAwesomeIcon icon={faUserCircle}/> <Link to={'/profile'}> Profile</Link> </Title>                 
                    </div>
                    <Divider type='horizontal' variant='solid' style={{borderColor: 'black', marginTop: '250px'}}>
                    </Divider>   
                    <Title level={5}><FontAwesomeIcon icon={faPowerOff} /> <Link onClick={handleLogout}> Logout</Link> </Title>
                </Drawer>
                
            </div>
        </>
    );
};

export default SideBar;
